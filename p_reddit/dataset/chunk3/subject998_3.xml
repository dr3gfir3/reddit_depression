<INDIVIDUAL>
<ID>subject998</ID>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:45:06 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> So this sort of thing then: https://mechboards.co.uk/shop/all/hhkb-diy-kit/ </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:38:39 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Just to be clear, you want the form factor of a HHKB, but not necessarily Topre? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:37:57 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Look at Zimbabwe. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:25:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Java and its particular flavour of enterprisey OOP can go _fuck itself_ </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:15:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Very nice! If you want to work on this a bit, I would say cut down on the amount of text. Bullet points are king! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:11:31 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This is in no way game theory </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:10:35 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  But notice that all Artillery heroes listed have movement abilities. Hanzo and Widow try to get high ground to have the drop on their targets, exactly the same as Pharah except hers doesn't rely on terrain.

A different way I would state this: artillery heroes have free access to high ground. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 14:06:02 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I'm sad I only found this thread after you linked me today! I feel like "marksmen" would have been a better name than "sharpshooters", as the latter more strongly implies very long range. Regardless, very useful article! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:54:26 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> The word "hollowing" is overloaded. It means having the undead curse and not having humanity, but it also means having the curse deteriorate to a large degree.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:53:08 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I don't understand? Do the prop players look like scenery?  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:52:04 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Hugs are great. I will also compliment men on their appearance, as this is one of those things society has decided is not "manly". (Many men develop poor body image because they are never complimented on their appearance.) 

If I know the guy well   I know he's not one of those "fragile masculinity" types, I also sometimes compliment them when they do something kind for someone.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:26:58 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Ah, thanks fam </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:13:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> It's a bit confusing, I can't quite make out which kit is which. You need ISO if it's an ISO Pok3r, otherwise ANSI. And you need 1.25u bottom row modifiers - be careful that you don't get the "Corsair style" with 1.5u and 1u mods. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:09:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Reaper? Junkrat? Bastion? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 13:01:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Fashion is the only reason to play any game. Ask Dark Souls players. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 12:19:39 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I'd love to check out DSA! I've never had the fortune. I'd prefer white/black/grey, and if blanks are an option then that. Approximate shipping to Cape Town, South Africa? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:55:05 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Precisely. If they have to be played together or not at all, the designer has control over more variables, which means they can give the pair unique strengths that would be completely imbalanced in other contexts. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:53:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Seriously? Not a single goddamn mention of Cloak and Dagger? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:43:09 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Keyboards in general are pretty much cross-platform compatible, as they use the same USB HID standard. You might find that media keys don't quite work right, but software like Karabiner Elements (or AHK on Windows) can usually fix that sort of thing. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:41:09 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Fullsize is suffering. 

dying

Hold on, I'mma make that my flair </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:39:14 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> What is the extra micro USB port supposed to be used for? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 10:36:08 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Anyways, you're conflating a job with income. They are not necessarily the same thing.

Oh I hear you on that. But until UBI or some other system is implemented, a job and income are approximately the same thing for most. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 08:50:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You can buy MX sliders for Topre now! https://originative.co/products/mx-sliders </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 08:48:46 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If you're looking for a programmable board, why do you care about it being full size? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 08:44:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Ducky Lightsaver

Duck, not Ducky! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 08:11:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Jobs are not welfare. 

Hmm. What does this mean? 

Do you mean, "The world does not owe you a job?" Because I'm pretty sure I disagree. If most people aren't owed a job, most people will live in poverty.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-04 08:01:19 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> It's clearly sarcasm.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 19:30:05 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> OP is unemployed, not incapable.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 19:29:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Affect is usually the verb. It affected her commute. You can also say someone has a vocal affectation, meaning they put on a different accent when they sing. 

Effect is usually the noun. It has an effect. You can also use it sort of like "do" - you can effect change in an organisation.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 18:05:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If you do it and add a bit of artificial latency, that scenario will basically only happen in pathological cases.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 18:04:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Semi floating. The backpack is pretty padded. I don't exactly handle my pack roughly. But no damage has occurred yet, in almost a year. My keycaps are the POS stock ABS, so I don't care. I would get a sleeve if I could.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:49:28 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  When I get a message that "monster died" (normally before the fake-bullet hits, but not always) I set a flag: Kill this monster on next bullet collision (from any bullet) or in 0.5 seconds (in case all the bullets miss on my screen, or the fake-bullet collided before I got the "monster died" network message).

Why do it this way, though? Why not just kill the monster immediately when the packet comes in? You can keep a log of what the monster did in the last n time (e.g. dealt 2 damage to me), and if a network packet comes in saying "actually this monster died before it dealt that damage", you kill the monster immediately and undo the damage it did. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:43:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Would I just set the cron job to run the script every five minutes (or every minute) and then have the script decide whether any messages are to be announced or any actions taken?

Yeah.

 What happens if the script is running and then is called again?

It will just run another instance, yes. So if the script plays sound files, you will end up with two sound files playing simultaneously (barring e.g. exclusive sound driver access and the like). </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:41:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  I know I am very bad at explaining things but I can't really share the PDFs as these are confidential n that.

So find a way to explain better without sharing the PDFs.

Can you draw a diagram with Paint? Or can you at least state your problem without using pronouns? E.g. instead of "it needs to go behind it", "PDF A needs to go behind PDF B". </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:38:04 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> They don't exist, because each small keyboard has its own Fn layer layout. The only way you're getting them is by buying a front-printed V60. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:36:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> The increased throw is a key part of what makes mechs good. You might want to try one for more than just a few minutes before making up your mind. Can you borrow one from a friend? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 17:35:25 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I do, and I carry it in my Targus laptop backpack. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 16:44:56 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> A common way to handle this sort of thing is to add a bit of latency, so that these sorts of issues can be cleaned up "behind the scenes" before the player sees. Some info here: https://en.wikipedia.org/wiki/Lag#Solutions_and_lag_compensation </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 16:32:54 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> No clue, I don't use it. I would caution against this sort of thing as how is the test supposed to know what to test for? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 15:57:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You're not entirely wrong </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 15:49:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> How does one rocket jump with Bastion? Do you fire first and then jump? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 15:40:42 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Are you talking about switching to dvorak, curving the board, splitting the board, or something in those realms or am I being dense?

Very much that sort of thing!

I'm not personally a huge believer in alternate layouts (Dvorak et al), mostly because I haven't given them a try. My biggest reason for this is compatibility - using another computer is going to be very hard if I can't ensure I always have my chosen layout available there. Luckily, this is a thing you can completely solve in software alone, so it doesn't affect your build plan.

Mostly, I'm talking about these points:

* Alignment of keys with respect to your body - wrists, arms, shoulders, etc.
* Using your strongest, most agile fingers more.

# Key alignment

Your fingers are not great at moving side to side! The staggered horizontal rows of the standard keyboard are a relic of typewriter design - the rows had to be staggered so that there was space for the mechanical arms to move past each other.

No such requirement exists today, so there's no reason to stagger rows horizontally.

You may want to stagger rows vertically, as e.g. your middle finger is longer than your pinky. Look to e.g. the Ergodox for an example of how this is done.

Also, the standard keyboard layout forces your wrists to bend a lot. This is bad! A better solution is a curved/angled layout, like the MS Ergo or Atreus, or even better, split the keyboard into two halves, like the aforementioned Ergodox.

# Using your best fingers

Your thumbs are super strong and agile! **Why are you putting them both on a single key?!**

To anyone who takes comfort   efficiency at all seriously, I would not recommend anything less than 2 keys per thumb, but preferably more. (I personally think 3 is optimal.) Use them for modifiers! If you put Shift on a thumb key, you can type capital letters so much more easily, because you never have to use a pinky to do it - so in turn you only need one Shift key, and you don't have to either stretch when using one hand for both, or do that awkward thing of Shift with one hand and the letter with the other.

If you're a gamer, having a solid 2-3+ keys on the left thumb is so great. That's effectively what those Orbweavers and similar gamepad devices do. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 15:29:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  But they never help we when I am in pain.

Pain is one of the hardest symptoms to deal with, because it cannot be measured or detected by the doctor. If by "never help" you mean they don't suggest ways to mitigate, or prescribe painkillers, then I think you're lying. If by "never help" you mean they don't wave their magic wands and remove your pain, that's because they can't.

 And this week my health care provider wrote to me that they I have any health care insurance with them anymore.

Insurance providers don't just drop you. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 15:02:26 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Yeah but it tends to attract a dumb crowd. https://www.youtube.com/watch?v=8iFD0Q6jt0Y </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 14:43:52 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If you want to fix it, open it up and see if the solder joint is looking okay. Maybe poke at it with a multimeter. It might be the solder joint wearing out, or the switch may be broken. Either way, a fix is easy if you have a soldering iron.

The upgrade for the TK is the newer Masterkeys Pro M. Same form factor, but a standard layout, and RGB lighting.

If you want to make a keyboard, there's tons of resources. Google 'brownfox build guide' - it's a forum thread on Deskthority where the designer of the Whitefox details how he built a keyboard. You can trivially emulate the numpad/arrow switching that the TK does if you build your own - people use open-source firmware (usually TMK/QMK) with a Teensy microcontroller, and that is completely programmable to your liking. It's usually a bit more expensive than buying a mass-produced product like a CM keyboard, but you get something that suits your needs more closely.

If you're going to go the DIY route, I'd advise you to think hard about every aspect of your keyboard, including things like layout. The standard keyboard we all know is horribly designed for its current purpose (computer use). </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 14:32:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Idk, picked it up somewhere.

So a recursive function breaks a problem into smaller and smaller bits until it finds a bit it can actually handle. Then it handles that small bit, and combines it with all the other small bits to create the final result.

That "bit it can actually handle" is called the base case. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 13:39:28 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> git is a tool you use to track changes to files. It lets you go back to earlier versions. It also lets you do things like branch your files off into a new "version" that you can work on independently of the main "version", and then later merge the two "versions" together. It also acts as a kinda-sorta backup tool, in the sense that if you delete a file by accident, you can just tell git to "forget" that you deleted it. The big thing about git is that it works over a network. I have a copy of the git project, and you have a copy, and we can sync our changes to each other.

Github is a website that hosts a copy of a git project. Many people use it as a "master" copy, so everyone working on a set of files gets it from Github, and pushes their changes to Github. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 13:36:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> "Commit" means, "Remember that I made these changes." "Push" means, "Inform github that I made these changes." </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 13:35:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Don't all online games have some odd artifacts sometimes? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 13:35:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> As an alternative, you can look to Varmilo. They make very, very similar keyboards, and they have a rep on this sub who you can order customs from. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 13:32:09 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Weighing in, because more opinions == more fun!!!!

There is really one reason: comfort   efficiency. A keyboard is like a saddle: it is the part (well, one of the parts) of the system that your body interacts with.

The difference between mechanical keyboards and membrane keyboards is simply this: mechanical keyboards are made to be good keyboards, at the cost of being expensive. Membrane keyboards are made to be cheap, at the cost of being good keyboards. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 12:59:06 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> My wife isn't seeing it, is there something that needs to be done to trigger it? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 12:37:35 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> So what you're saying is you want less information in patch notes. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 12:17:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I got around it by getting hired. I am really, really bad at finishing projects. Like full-on adult ADHD bad. The solution for me was to get hired. Suddenly I couldn't not finish a project - my salary depended on it.

You very quickly learn there is no "wall". </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 12:15:49 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Fun fact: the "grain/pinch of salt" expression is meant to say "with a small amount of common sense/skepticism". So if you want to emphasise that expression, you should say "an extra small grain of salt", not "a lot of salt". </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 12:11:09 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> To be clear, what do you mean by "test each piece as you write it"? Do you mean write tests for it during/after writing the code, or do you mean manually test it?

If the former: that is the same thing as unit testing. The "better practice" you may have heard of is _test-driven development_, which means that you write tests **before** you write code. You decide up front, "This function must take two integers and return an integer, and it must throw an error if either argument is not an integer, and it must throw an error if the second argument is zero." And then you write a test asserting all that, and _then_ you write the code that will make the test pass. A lot of people give up on writing code like this because it's a fucking hassle, and because it means you must know up front what every bit of code will do; often in practice your requirements change as you code.

If the latter: unit tests are not just for _now_, they are for _later_ too. Sure, you can test your function `foo()` as you write it. But then three months later, you are working on a seemingly-unrelated thing... and you change something that makes `foo()` break. You now have to manually discover and track down the error. You might not even discover it because why would you be looking at `foo()`? So you end up deploying the code to live, and two hours later the emails from users come streaming in. If you have unit tests covering as much as possible of your code, this can never happen - you just run the full suite of tests on everything whenever you change something, and if all the tests pass you know with 99% certainty you didn't break something. </TEXT>
</WRITING>
<WRITING>
	<TITLE> Christian Scott aTunde Adjuah -- New Orleanian Love Song [jazz] (2017) Afro-Cuban polyrhythms </TITLE>
	<DATE> 2017-04-03 12:05:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:53:09 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Of course. It's easy money. </TEXT>
</WRITING>
<WRITING>
	<TITLE> [Serious] Giving the definition, what is an interesting term or concept from your field of expertise? </TITLE>
	<DATE> 2017-04-03 11:52:53 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:43:16 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I'm telling you, that is not how these two are.

To put it differently: you can tell Nike is trying to get money from you. Does that stop you buying their products? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:39:54 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Okay so you're not into blanks? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:21:30 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Kay is not fake at all. Watch her first Dark Souls video.

Seagull is a pro Overwatch player and he just streams himself playing. No funny voice, no "HEY GUYS ITS YA BOI SEAGULL", none of that bullshit.
 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:18:14 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> What are you after, specifically? Material? Profile? Legends? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:11:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  It is usually considered poor form to bottom out


wat.css.sass </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:07:54 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Dropping out </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:07:41 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> 1. A_Seagull: calm, collected Overwatch play at the highest level. With the occasional educational tidbit.
2. Kay Plays: calm, collected Dark Souls blind play. She starts out a complete fucking scrub, but truly masters the game in short order, and figures out most of the lore on her own to boot.
3. CollegeHumor: a lot funnier than their name would suggest. I especially love how their skits tend to take an absurd turn in the last ten seconds.
4. LoLEventVods: because I need to see Unicorns of Love crush everyone, and Twitch has terrible UX.
5. Disco Heat: best fuckin music </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:03:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Realise that nothing matters. Especially money. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 11:02:35 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Times like this, you should spam "OMFG WIDOW SWITCH STUPID NOOB" in the post game chat </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 10:54:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  abused by

Oh, I understand now, you're one of those entitled types. </TEXT>
</WRITING>
<WRITING>
	<TITLE> DAE ITS FUNNY TO MIX IPS??????? </TITLE>
	<DATE> 2017-04-03 10:51:19 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 09:41:52 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  But how does figuring out the base case work with merge sort or quicksort for example?

It's completely arbitrary, just like figuring out your boolean expression in a loop. Your question is a bit like asking, "How do you figure out how to write a program?" You just... figure it out. :D </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 09:31:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  a quick fix

For all you know they've been working on this since before release. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 08:30:49 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Well, you can't do two things at once in a single thread. So think about how you can create the *illusion* of two things happening at once.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 08:29:27 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Not even waiting for tomorrow's news?  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-03 00:39:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:36:57 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Your first assertion is not accurate. Your base case must be an answer to the simplest question of its type. For instance, if your function is to yield the factorial of an integer, your base case should be the factorial of 1. That has nothing to do with the form of the ultimate answer, because before you can get the ultimate answer, the iteration of the function calling the simplest case must *assemble* the result of the simplest case into its own result - in this case, it has to multiply the return value by 2 and return the result of that.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:32:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> No problem. I had to look it up myself because I'd never compared arrays before in JS.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:17:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Apprenticeship. Programming is largely a practical concern. Knowing how to invert a binary tree or whatever is not as useful as knowing solid debugging techniques.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:15:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> JS cannot compare arrays like that. You have to manually check each element.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:13:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Which line of your code checks for zero?  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:11:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Have you looked at the docs for the Qt textEdit widget? Specifically, what arguments the constructor takes.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 23:07:13 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Can apps be decompiled so that someone could gain access to the database then?

Your app talks to the back end. It simply says, "Please do `db_query_foo()`." The back end makes the actual requests to the DB. So your app doesn't need the DB credentials. 

Since your DB credentials are on a server somewhere, they can only be accessed if someone breaks into the server. Decompiling the app wouldn't tell them anything.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 18:12:41 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> That's not the part that matters. The part that matters is magic powers. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:56:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Turing completeness really should be renamed to "Turing-Shaw completeness".  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:54:04 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  boolean operators

I think you may be confused about something. There's no boolean operators in your question...  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:47:13 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Others have answered your question, but I just want to weigh in on another topic: if you're doing thousands of GETs for a single calculation, you're doing it wrong. Do one GET to retrieve the data you need and then work with it in memory.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:39:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Haha, I like browsing /new.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:38:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Your best bet is probably Javascript, as every standard computer comes with a Javascript interpreter - namely the browser.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:36:46 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Yes, assuming your second PR is still aimed at `master`.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:35:21 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Sure. Google could go down.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 17:30:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Claw as in using fingers on face buttons?  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 15:55:13 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Unicorn vomit! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 14:53:55 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Try this? http://www.gonskeyboardworks.com/manuals/110-nerdy-gui.html </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-02 11:33:42 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  unless you are pretty good with the hero you are using currently, when a teammates say switch, try switching it first.

No, the other way around. Play what you want until it doesn't work. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-01 22:50:58 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Beautiful
 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-01 01:03:05 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Then the person they were queuing with was good at the game, balancing out.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-04-01 00:41:10 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I don't see which part of your anecdote disproves my statement that on balance, the Vi player is as good at the game as you are.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 23:03:22 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Put your keyboard on something soft. A tea towel, or even a thicker mouse mat. Makes a surprising difference </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 22:46:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  as well as curly braces that aren't buried under half a dozen function layers.

Shift+[ and Shift+] work just as nicely on a 60% as on a full size. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 22:16:51 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> No idea. I don't use an IDE. I use vim.

If you're asking about "best practices", the real answer is: install rubocop and follow its suggestions religiously. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 20:57:52 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Sure. But there is other evidence that seems to point at the same conclusion.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 19:10:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Of course a text-based UI can do the same thing. It just uses text instead of visuals. 

Use the languages you know.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 19:05:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I dunno man, Google "arduino beginner project" and do the first one that comes up  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:58:13 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You'll need js for this regardless. Can probably do it in a week if you don't go crazy.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:45:42 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> lol, perhaps a more intense reply than I was expecting, but happy to help  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:44:48 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Nothing matters. The pressures of society and family don't matter. Things don't matter. Money doesn't matter. So you're free to do whatever you want. Feel like you'd be happier if you drop out of school? Do it!  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:40:31 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Python absolutely has something to break out. So does Ruby and C and Java and pretty much every language in common use.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:39:14 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Many functional languages literally have no other loop construct than recursion.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:37:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Show me a screenshot of the Google results for "learn php interactive" and "php example project".  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:35:25 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Buy a common microcontroller like an Arduino or Teensy and go nuts. 

Electronic components are dirt cheap.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:34:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Yes:

    $('#menuToggle, #menuItem1, #menuItem2').mouseleave()...

But that's not really what you want. Think carefully about what would happen if you did this. 

Also: **don't use the same ID on multiple elements!!** IDs are meant to be **unique**. If you want multiple elements to have an identical identifier, use a class.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:29:08 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Totally. I mentioned Electron partly because I'm too lazy to come up with answers for every common platform, lol.

Honestly if I were OP, I'd write it as a command line util first and only then bother with skinning it.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 18:24:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Ah, didn't catch that part! 

/u/johnm4jc, if you want you create a UI I'm not sure what the best option would be. I don't really write GUIs - the last time I did was using tkinter with Python. I don't particularly recommend it, lol. I find it much easier to create web interfaces with HTML/CSS/JS. If you want to go that route, you could probably achieve your goals using Electron to make a desktop app with web technologies.  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 17:52:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Sweet, how did you solve it? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 17:11:31 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> One of the things I try to do, and want to get better at, is aiming my shots in such a way that the first and second shot hit more or less simultaneously, killing people before they have a chance to react, escape, heal, deflect, etc.

One way that works alright is to aim the first nade for bounces and the second for a direct hit. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 17:09:32 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Why do you think that is? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 17:02:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You're literally replying to a person relating an anecdote about a DPS who got flamed... </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 16:40:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> http://rationalwiki.org/wiki/Wanting_it_bad_enough </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 15:19:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I develop iteratively. I will start with something concrete that I know needs to be done, like user auth, and start hacking away at that. Then move on to the next thing when that's done. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 15:16:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> A shell script will handle this nicely, as will a language like Python or Ruby. Really it doesn't matter, pick something with appealing syntax and have at it. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 15:15:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Networking is nice to know, but to be fair the stuff I use in my job doesn't really touch on anything I did in CompTIA. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 15:08:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I'm not saying it was unintended, I'm saying it was undesigned.

I don't think Blizzard designed this saying, "Let's give players an ability that splits up the enemy team!"

I think they said, "Let's give players an ability that makes a wall!" </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2017-03-31 15:00:02 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Underweight, if anything. So how about it? Do you think everyone who fails to do something fails to want it enough? </TEXT>
</WRITING>
</INDIVIDUAL>
